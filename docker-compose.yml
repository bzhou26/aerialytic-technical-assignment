services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: aerialytic_db
    environment:
      POSTGRES_DB: aerialytic
      POSTGRES_USER: aerialytic_user
      POSTGRES_PASSWORD: aerialytic_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aerialytic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aerialytic_user -d aerialytic"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend-service:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: aerialytic_backend
    env_file:
      - .env
    volumes:
      - ./aerialytic:/app/aerialytic
      - ./manage.py:/app/manage.py
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - aerialytic_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8001"

  # React Frontend
  frontend-service:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: aerialytic_frontend
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8001}
    ports:
      - "3000:3000"
    depends_on:
      - backend-service
    networks:
      - aerialytic_network

volumes:
  postgres_data:

networks:
  aerialytic_network:
    driver: bridge 